# Generated by Django 5.2.5 on 2025-08-13 12:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True, max_length=120, verbose_name="Название"
                    ),
                ),
                (
                    "external_id",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        unique=True,
                        verbose_name="Внешний ID",
                    ),
                ),
                ("lat", models.FloatField(verbose_name="Широта")),
                ("lon", models.FloatField(verbose_name="Долгота")),
            ],
            options={
                "verbose_name": "Город",
                "verbose_name_plural": "Города",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="weather_cit_name_db5943_idx"),
                    models.Index(
                        fields=["lat", "lon"], name="weather_cit_lat_3575f8_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="TelegramProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "chat_id",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        unique=True,
                        verbose_name="Chat ID",
                    ),
                ),
                (
                    "is_confirmed",
                    models.BooleanField(default=False, verbose_name="Подтверждён"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="telegram",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Telegram-профиль",
                "verbose_name_plural": "Telegram-профили",
            },
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "interval",
                    models.CharField(
                        choices=[("hourly", "Ежечасно"), ("daily", "Ежедневно")],
                        default="daily",
                        max_length=10,
                        verbose_name="Интервал",
                    ),
                ),
                (
                    "conditions",
                    models.JSONField(blank=True, default=dict, verbose_name="Условия"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активна"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscriptions",
                        to="weather.city",
                        verbose_name="Город",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscriptions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Подписка",
                "verbose_name_plural": "Подписки",
                "indexes": [
                    models.Index(
                        fields=["user", "city"], name="weather_sub_user_id_16ec01_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="weather_sub_is_acti_8d71c3_idx"
                    ),
                ],
                "unique_together": {("user", "city")},
            },
        ),
        migrations.CreateModel(
            name="WeatherSnapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ts", models.DateTimeField(db_index=True, verbose_name="Время среза")),
                ("temp", models.FloatField(verbose_name="Температура, °C")),
                ("humidity", models.IntegerField(verbose_name="Влажность, %")),
                ("wind", models.FloatField(verbose_name="Скорость ветра, м/с")),
                (
                    "description",
                    models.CharField(max_length=120, verbose_name="Описание"),
                ),
                ("raw", models.JSONField(verbose_name="Ответ API")),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="snapshots",
                        to="weather.city",
                        verbose_name="Город",
                    ),
                ),
            ],
            options={
                "verbose_name": "Снимок погоды",
                "verbose_name_plural": "Снимки погоды",
                "ordering": ["-ts"],
                "indexes": [
                    models.Index(
                        fields=["city", "-ts"], name="weather_wea_city_id_4e6722_idx"
                    )
                ],
            },
        ),
    ]
